/**
 * Building on the sample skeleton for 'ui.fxml' COntroller Class generated by SceneBuilder 
 */
package comp3111.popnames;

import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.Tab;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;


public class Controller {

    @FXML
    private Tab tabTaskZero;

    @FXML
    private TextField textfieldNameF;

    @FXML
    private TextField textfieldYear;

    @FXML
    private Button buttonRankM;

    @FXML
    private TextField textfieldNameM;

    @FXML
    private Button buttonRankF;

    @FXML
    private Button buttonTopM;

    @FXML
    private Button buttonTopF;

    @FXML
    private Button buttonSummary;

    @FXML
    private Tab tabReport1;

    @FXML
    private TextField T1TextFieldYear;

    @FXML
    private TextField T1TextFieldtopN;

    @FXML
    private CheckBox T1_displaySummary;

    @FXML
    private CheckBox T1_displayDataTable;

    @FXML
    private CheckBox T1_displayBarChart;

    @FXML
    private CheckBox T1_displayPieChart;

    @FXML
    private Button T1ButtonComputeResults;

    @FXML
    private Tab tabReport2;

    @FXML
    private CheckBox t2DataTable;

    @FXML
    private CheckBox t2Summary;

    @FXML
    private CheckBox t2BarChart;

    @FXML
    private CheckBox t2PieChart;

    @FXML
    private TextField t2Year1;

    @FXML
    private TextField t2Year2;

    @FXML
    private TextField t1Pop;

    @FXML
    private TextField t1Gender;

    @FXML
    private Button t2GenerateResults;

    @FXML
    private Tab tabReport3;

    @FXML
    private Tab tabApp1;

    @FXML
    private TextField T4textFieldDadsName;

    @FXML
    private TextField T4textFieldDadsYOB;

    @FXML
    private TextField T4textFieldMomsName;

    @FXML
    private TextField T4textFieldMomsYOB;

    @FXML
    private Button t4ButtonT4X1;

    @FXML
    private Button t4ButtonT4X2;

    @FXML
    private Tab tabApp2;

    @FXML
    private TextField t5Name;

    @FXML
    private TextField t5Gender;

    @FXML
    private TextField t5YOB;

    @FXML
    private TextField t5GenderMate;

    @FXML
    private TextField t5Preference;

    @FXML
    private Button t5T5X1;

    @FXML
    private Button t5T5X2;

    @FXML
    private Tab tabApp3;

    @FXML
    private TextArea textAreaConsole;

    /**
     *  Task Zero
     *  To be triggered by the "Summary" button on the Task Zero Tab 
     *  
     */
    @FXML
    void doSummary() {
    	int year = Integer.parseInt(textfieldYear.getText());
    	String oReport = AnalyzeNames.getSummary(year);
    	textAreaConsole.setText(oReport);
    }

  
    /**
     *  Task Zero
     *  To be triggered by the "Rank (female)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doRankF() {
    	String oReport = "";
    	String iNameF = textfieldNameF.getText();
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	int oRank = AnalyzeNames.getRank(iYear, iNameF, "F");
    	if (oRank == -1)
    		oReport = String.format("The name %s (female) has not been ranked in the year %d.\n", iNameF, iYear);
    	else
    		oReport = String.format("Rank of %s (female) in year %d is #%d.\n", iNameF, iYear, oRank);
    	textAreaConsole.setText(oReport);
    }

  
    /**
     *  Task Zero
     *  To be triggered by the "Rank (male)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doRankM() {
    	String oReport = "";
    	String iNameM = textfieldNameM.getText();
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	int oRank = AnalyzeNames.getRank(iYear, iNameM, "M");
    	if (oRank == -1)
    		oReport = String.format("The name %s (male) has not been ranked in the year %d.\n", iNameM, iYear);
    	else
    		oReport = String.format("Rank of %s (male) in year %d is #%d.\n", iNameM, iYear, oRank);
    	textAreaConsole.setText(oReport);
    }


    /**
     *  Task Zero
     *  To be triggered by the "Top 5 (female)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doTopF() {
    	String oReport = "";
    	final int topN = 5;
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	oReport = String.format("Top %d most popular names (female) in the year %d:\n", topN, iYear);
    	for (int i=1; i<=topN; i++)
    		oReport += String.format("#%d: %s\n", i, AnalyzeNames.getName(iYear, i, "F"));
    	textAreaConsole.setText(oReport);
    }


    /**
     *  Task Zero
     *  To be triggered by the "Top 5 (male)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doTopM() {
    	String oReport = "";
    	final int topN = 5;
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	oReport = String.format("Top %d most popular names (male) in the year %d:\n", topN, iYear);
    	for (int i=1; i<=topN; i++)
    		oReport += String.format("#%d: %s\n", i, AnalyzeNames.getName(iYear, i, "M"));
    	textAreaConsole.setText(oReport);
    }
    @FXML
    void t1ComputeResults() {
    	String oReport = "";
    	String year = T1TextFieldYear.getText();
    	String input_avaliable_error = "" ;
    	if(year == "") {
    		input_avaliable_error += "The year is blank! Please enter year \n";
    	}
    	String n = T1TextFieldtopN.getText();
    	if(n == "") {
    		input_avaliable_error += "The top N most popular names to reported is blank! Please enter a value \n";
    	}
    	
    	boolean summary_box = T1_displaySummary.isSelected();
    	boolean dt_box = T1_displayDataTable.isSelected();
    	boolean bar_chart_box = T1_displayBarChart.isSelected();
    	boolean pie_chart_box = T1_displayPieChart.isSelected();
    	boolean boxes_checked = true ;
    	if((summary_box == false)&&(dt_box == false)&&(bar_chart_box == false)&&(pie_chart_box == false)) {
    		input_avaliable_error += ("Please Check or Select at Least One Form of Data Representation and Try Again!");
    		boxes_checked = false ; 
    	}
    	if((year == "")||(n=="")||(boxes_checked==false)) {
    		textAreaConsole.setText(input_avaliable_error);
    		return;
    	}
    	String validation_error = "" ; 
    	boolean year_validated = false ;
    	int int_year = 0 ;
    	try {
    		int_year = Integer.parseInt(year);
    		if((int_year >=1880)&&(int_year <= 2019)) {
    			year_validated = true ; 
    		}
    		else {
    			validation_error += "Enter data value in the range for the Year. It too small or too large! \n";
    		}
    		
    	}
    	catch (Exception e) {
    		validation_error += "Enter the Correct Datatype for the Year. Enter a Number! \n";
    	}
    	boolean n_validated = false ;
    	int int_n = 0 ;
    	try {
    		int_n = Integer.parseInt(n);
    		if((int_n >=1)&&(int_n <= 10)) {
    			n_validated = true ; 
    		}
    		else {
    			validation_error += "Enter data value in the range for the N. It too small or too large! \n";
    		}
    		
    	}
    	catch (Exception e) {
    		validation_error += "Enter the Correct Datatype for the N. Enter a Number! \n";
    	}
    	if((!year_validated)||(!n_validated)) {
    		textAreaConsole.setText(validation_error);
    		return; 
    	}
    	oReport = String.format("Year %s\n", year);
    	oReport += String.format("N %s\n", n);
    	oReport += String.format("Summary box %b\n", summary_box);
    	oReport += String.format("Data table %b\n" , dt_box);
    	oReport += String.format("Bar Chart box %b\n", bar_chart_box);
    	oReport += String.format("Pie Chart Box %b\n" , pie_chart_box);
    	oReport += String.format("Lets implement the charts!\n" );
    	textAreaConsole.setText(oReport);
    	
    	
    }

    @FXML
    void t4_computeT4X1() {
    	textAreaConsole.setText("Testing T4X1");
    }

    @FXML
    void t4_computeT4X2() {
    	textAreaConsole.setText("Testing T4X2");
    }

    @FXML
    void t5_computeT5X1() {
    	textAreaConsole.setText("Testing T5X1");
    }

    @FXML
    void t5_computeT5X2() {
    	textAreaConsole.setText("Testing T5X2");
    }

    @FXML
    void t2GenerateResults() {
    	textAreaConsole.setText("Testing T2");
    }

}
